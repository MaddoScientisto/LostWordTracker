@page "/"
@using LostWordTracker.Data
@using System.Collections.ObjectModel
@using LostWordTracker.Services
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject IDataService _dataService

<p>ok let's go</p>
<Card>
    <CardHeader>Save/Load to Local Storage</CardHeader>
    <CardBody>
        <Button Clicked="@Save" Color="Color.Primary">Save</Button>
        <Button Clicked="@Load" Color="Color.Secondary">Load</Button>
    </CardBody>
</Card>

<CardDeck>
    @if (_characters != null)
    {

        <Repeater Items="_characters" TItem="Character">
            <Card>
                <CardBody>
                    <CardTitle>@context.Name</CardTitle>
                    <CardImage Source="@context.Portrait">

                    </CardImage>
                    <CardText>
                        @context.Universe
                        <Check @bind-Checked="@context.Obtained">Obtained</Check>
                    </CardText>
                    <CardFooter>
                        <Button Color="Color.Primary" Clicked="@(e => @Mark(context))">Mark</Button>
                    </CardFooter>
                </CardBody>
            </Card>
        </Repeater>
    }


</CardDeck>

@code {


    private ObservableCollection<Character> _characters { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _characters = new(await _dataService.GetCharactersData());
    }


    public void Mark(Character character)
    {
        character.Obtained = true;
    }

    public async Task Save()
    {
        await _dataService.SaveData(_characters);
        //await _localStorage.SetItemAsync<CharacterData>("CharacterData", characters);
    }

    public async Task Load()
    {
        _characters = new(await _dataService.LoadData());
        //var data = await _localStorage.GetItemAsync<CharacterData>("CharacterData");
    }
}