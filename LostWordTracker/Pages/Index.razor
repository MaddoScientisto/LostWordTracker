@page "/"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService _localStorage

<p>ok let's go</p>
<Button Clicked="@Save" Color="Color.Primary">Save</Button>
        <Button Clicked="@Load" Color="Color.Secondary">Load</Button>
<CardDeck>
    @if (characters != null)
    {
        
        <Repeater Items="characters.Characters" TItem="Character">
            <Card>
                <CardBody>
                    <CardTitle>@context.Name</CardTitle>
                    <CardImage Source="@context.Portrait">

                    </CardImage>
                    <CardText>@context.Universe
                    <Check Checked="@context.Obtained">Obtained</Check>
                    </CardText>
                    <CardFooter>
                        <Button Color="Color.Primary" Clicked="@(e => @Mark(context))">Mark</Button>
                    </CardFooter>
                </CardBody>
            </Card>
        </Repeater>
    }


</CardDeck>

@code {
    private CharacterData characters;

    protected override async Task OnInitializedAsync() 
    {
        await Test();
    }

    private async Task Test()
    {
        characters = await Http.GetFromJsonAsync<CharacterData>("Characters.json");
    }

    public class CharacterData
    {
        public IList<Character> Characters { get; set; }
    }

    public class Character
    {
        public string Name { get; set; }
        public string Universe { get; set; }
        public string Portrait { get; set; }
        public string Tier { get; set; }
        public bool Obtained { get; set; }
        public bool Level { get; set; }

    }

    public void Mark(Character character)
    {
        character.Obtained = true;
    }

    public async Task Save()
    {
        await _localStorage.SetItemAsync<CharacterData>("CharacterData", characters);
    }

    public async Task Load()
    {
        var data = await _localStorage.GetItemAsync<CharacterData>("CharacterData");
    }
}